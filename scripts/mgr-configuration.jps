---
jpsType: update
name: Mysql Group Replication Cluster
description: Mysql Group Replication Auto Clustering
success:
  text: "../texts/phpmyadmin-credentials.md"
nodeGroupAlias:
  "${targetNodes.nodeGroup}": sqldb

globals:
  PATH: "${settings.path}"
  DB_USER: "${settings.db_user}"
  DB_PASS: "${settings.db_pass}"
  REPLICATION_USER: repl-${fn.random}
  REPLICATION_PASS: "${fn.password(20)}"
  MGR_NAME: "${fn.uuid}"
  MGR_MODE: "${settings.scheme}"
  MGR_CONF: "/etc/mysql/conf.d/mgr.cnf"
  CUSTOM_CONF: "${settings.custom_conf}"

onAfterScaleOut[sqldb]:
- forEach(event.response.nodes):
    initialSetup:
      id: "${@i.id}"
- setupSeeds
- forEach(event.response.nodes):
  - setupInstance:
      id: "${@i.id}"
  - startGR:
      id: "${@i.id}"

onAfterScaleIn[sqldb]:
  setupSeeds

onInstall:
- script[sqldb]: "${globals.PATH}/scripts/firewallRules.js"
  ports: '33061'
  name: MGR

- forEach(nodes.sqldb):
    initialSetup:
      id: "${@i.id}"

- setupSeeds

- forEach(nodes.sqldb):
  - setupInstance:
      id: "${@i.id}"
  - if (${@i.ismaster}):
      cmd[${@i.id}]: |-
        mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "RESET MASTER; SET GLOBAL group_replication_bootstrap_group=ON; START GROUP_REPLICATION;"
        sleep 5
        wget -qO- ${globals.PATH}/configs/addition_to_sys.sql | mysql -u${globals.DB_USER} -p${globals.DB_PASS}
      user: root

- forEach(nodes.sqldb):
    if (!${@i.ismaster}):
      startGR:
        id: "${@i.id}"

actions:

  initialSetup:
    - setupUser:
        id: "${this.id}"
    - setNodeDisplayName[${this.id}]: MGR
      if (!/settings.custom_conf/.test("${globals.CUSTOM_CONF}")):
        cmd[${this.id}]: cd /etc/mysql/conf.d && wget ${globals.CUSTOM_CONF} &>> /var/log/run.log
        user: root
    - cmd[${this.id}]: wget ${globals.PATH}/configs/mgr.cnf -O ${globals.MGR_CONF} &>> /var/log/run.log
      user: root
  
  setupUser:
    cmd[${this.id}]: |-
      wget ${globals.PATH}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
      bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
    user: root

  setupSeeds:
    script: |
      var resp = jelastic.env.control.GetEnvInfo('${env.envName}', session);
      if (resp.result != 0) return resp;
      var nodes = [];
      for (var i = 0, n = resp.nodes; i < n.length; i++)
        n[i].nodeGroup == nodeGroup ? nodes.push('node' + n[i].id + ':33061') : 0
      resp = {result:0, onAfterReturn: {}};
      resp.onAfterReturn['cmd['+ nodeGroup +']'] = 'sed -i "s/loose-group_replication_group_seeds.*/loose-group_replication_group_seeds = '+ nodes.join(',') +'/" /etc/mysql/conf.d/mgr.cnf';
      resp.onAfterReturn['user'] = 'root';
      return resp;
    nodeGroup: sqldb

  setupInstance:
  - if ('${globals.MGR_MODE}'.toLowerCase() == 'multi'):
      cmd[${this.id}]: sed -i "s/^#//" ${globals.MGR_CONF}
      user: root
  - cmd[${this.id}]: |-
      sed -i "s/server_id.*/server_id = ${this.id}/" ${globals.MGR_CONF}
      sed -i "s/bind-address.*/bind-address = node${this.id}/" ${globals.MGR_CONF}
      sed -i "s/report_host.*/report_host = node${this.id}/" ${globals.MGR_CONF}
      sed -i "s/loose-group_replication_group_name.*/loose-group_replication_group_name = ${globals.MGR_NAME}/" ${globals.MGR_CONF}
      sed -i "s/loose-group_replication_local_address.*/loose-group_replication_local_address = node${this.id}:33061/" ${globals.MGR_CONF}
      service mysql restart
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "INSTALL PLUGIN group_replication SONAME 'group_replication.so'";
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "RESET MASTER; SET SQL_LOG_BIN=0";
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "CREATE USER '${globals.REPLICATION_USER}'@'%' IDENTIFIED BY '${globals.REPLICATION_PASS}'";
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "GRANT REPLICATION SLAVE ON *.* TO '${globals.REPLICATION_USER}'@'%'; FLUSH PRIVILEGES;";
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "SET SQL_LOG_BIN=1";
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "CHANGE MASTER TO MASTER_USER='${globals.REPLICATION_USER}', MASTER_PASSWORD='${globals.REPLICATION_PASS}' FOR CHANNEL 'group_replication_recovery'"
    user: root
  
  startGR:
    cmd[${this.id}]: mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "RESET MASTER; START GROUP_REPLICATION;";
    user: root

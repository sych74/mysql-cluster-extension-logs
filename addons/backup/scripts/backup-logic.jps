{
    "jpsType": "update",
    "id": "backup-logic",
    "name": "backup-logic",
    "globals": {
        "work_dir": "/var/lib/jelastic/backup",
        "backupScript": "/var/lib/jelastic/backup/backup.sh",
        "backupIni": "/var/lib/jelastic/backup/backup.ini",
        "s3cfg": "/var/lib/jelastic/backup/s3cfg",
        "backup_user": "backup_user${fn.random}",
        "backup_password": "${fn.password}",
        "backup_log": "/var/log/backup.log"
    },
    "onInstall": "setup",
    "onUninstall": "cleanCron",
    "actions": {
        "setup": [
            "setupBackupUser",
            "setupConfig", {
                "if ('${settings.backup_mode}' == 'nfs')": "addStorage"
            }, {
                "if ('${settings.backup_mode}' == 's3')": "setupS3"
            }, "setupCron"
        ],
        "setupS3": {
            "cmd[${settings.nodeId}]": [
                "echo [default] > ${globals.s3cfg}",
                "echo access_key = '${settings.access_key}' >> ${globals.s3cfg}",
                "echo secret_key = '${settings.secret_key}' >> ${globals.s3cfg}",
                "echo host_base = '${settings.s3_host}' >> ${globals.s3cfg}",
                "echo host_bucket = '${settings.s3_host}' >> ${globals.s3cfg}",
                "echo S3_CONF='${globals.s3cfg}' >> ${globals.backupIni}"
            ],
            "user": "root"
        },
        "setupConfig": {
            "cmd[${settings.nodeId}]": [
                "if [ ! -d ${globals.work_dir} ]; then mkdir -p ${globals.work_dir}; fi",
                "if [ ! -d ${settings.backup_path} ]; then mkdir -p ${settings.backup_path}; fi",
                "echo \"BACKUP_MODE='${settings.backup_mode}' #nfs s3\" > ${globals.backupIni}",
                "echo DB_USER='${globals.backup_user}' >> ${globals.backupIni}",
                "echo DB_PASSWORD='${globals.backup_password}' >> ${globals.backupIni}",
                "echo BACKUPDIR='${settings.backup_path}' >> ${globals.backupIni}",
                "echo NUMBER_OF_BACKUPS='${settings.backup_count}' >> ${globals.backupIni}",
                "wget ${settings.baseUrl}/scripts/backup.sh?_r=${fn.random} -O ${globals.backupScript}",
                "chown jelastic -R ${settings.backup_path}"
            ],
            "user": "root"
        },
        "addStorage": {
            "if (!nodes.backup_${settings.nodeGroup})": [{
                "addNodes": {
                    "cloudlets": 8,
                    "displayName": "Backup for '${settings.nodeGroup}' nodeGroup",
                    "nodeType": "docker",
                    "dockerName": "jelastic/storage",
                    "dockerTag": "latest",
                    "nodeGroup": "backup_${settings.nodeGroup}",
                    "metadata": {
                        "layer": "backup_${settings.nodeGroup}"
                    }
                }
            }, {
                "script": [
                    "var resp = jelastic.environment.control.GetEnvInfo('${env.envName}', session);",
                    "if (resp.result != 0) return resp;",
                    "for (var i = 0; resp.nodes; i++) {",
                    "  var node = resp.nodes[i]",
                    "  if (node.nodeGroup == 'backup_${settings.nodeGroup}' && node.ismaster) {",
                    "    return { result: 0, onAfterReturn : {addBackupVolume: {backupNodeId: node.id}}};",
                    "  }",
                    "}"
                ]
            }]
        },
        "addBackupVolume": [{
            "api": "env.file.AddMountPointById",
            "nodeId": "${settings.nodeId}",
            "path": "${settings.backup_path}",
            "protocol": "nfs",
            "sourcePath": "${settings.backup_path}",
            "sourceNodeId": "${this.backupNodeId}",
            "name": "Backup Volume",
            "readOnly": false
        }],
        "setupCron": [
            "cleanCron", {
                "cmd[${settings.nodeId}]": [
                    "echo >> ${globals.backup_log}; chown jelastic ${globals.backup_log}"
                ], 
                "user": "root"
            }, {
                "cmd[${settings.nodeId}]": [
                    "crontab -l 2>/dev/null | { cat; echo \"$(echo '${settings.cron}' | cut -d'#' -f1) /bin/bash ${globals.backupScript} ${globals.backupIni} &>> ${globals.backup_log}\n\"; } | crontab - ;"
                ]
            }
        ],
        "cleanCron": {
            "cmd[${settings.nodeId}]": [
                "crontab -l 2>/dev/null | sed \"/backup.sh/d\" | crontab -"
            ]
        },
        "setupBackupUser": {
            "cmd[${settings.nodeId}]": [
                "if [ -x \"$(command -v mysql)\" ]; then mysql --user=${settings.db_user} --password=${settings.db_password} -e \"GRANT LOCK TABLES, SELECT ON *.* TO '${globals.backup_user}'@'%' IDENTIFIED BY '${globals.backup_password}'; FLUSH PRIVILEGES;\"",
                " elif [ -x \"$(command -v psql)\" ]; then export PGPASSWORD=${settings.db_password}; psql -U ${settings.db_user} -d postgres -c \" CREATE USER ${globals.backup_user} SUPERUSER  password '${globals.backup_password}'; ALTER USER ${globals.backup_user} set default_transaction_read_only = on;\"; fi"            
            ]
        }
    },
    "jpsVersion": "0.9"
}
